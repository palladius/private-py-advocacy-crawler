
== Article 1
* Title: 'RAG one-liners: curling a website with Gemma'
* Author: 'Riccardo Carlesso'
* URL: 'https://blog.devops.dev/comand-line-rag-with-ruby-bash-and-gemma-curling-a-website-without-apis-de69215d43df?source=rss-b5293b96912f------2'
* PublicationDate: 'Fri, 07 Jun 2024 09:50:32 GMT'
* Categories: retrieval-augmented-gen, ruby, llm, swimming

I recently did a RAG (Retrieval-Augmented Generation) demo in Ruby (interested? Check my code and bibliography). However, when I talk about RAG with my practitioners, they usually don’t know where to start. I thought to myself (yes, I tend to speak to myself a lot, especially when I cycle or swim):— “Hey, RAG should be as easy as: cat content.prompt | sed “s/template/My real Content” | ollama gemma run!” (*) — “Wait — what?“— “Is it not obvious? Maybe I should write an article about it!”(*) If this is obscure for you, just look a bit further down. There’s a diagram to explain.So here we are! I’m going to show you a real-life example which is useful in my triathlete daily routine, and hopefully is relateable to you:My first swim in the Zurisee in 2024. Water temperature was 16°C! Brrrr!Coders: are you bored by too much text and want to jump to the code? Here it is!Why RAG? What is RAG again?In a nutshell, LLMs have a two problems:A tendency to hallucinate (ie, fabricate false news) andproduce outdated news.How do you fix this? By injecting vetted/recent data to address (1) and (2) respectively.In a nutshell, you “Google the solution” and add it to the prompt. This seems complicated, but it’s not. It’s something like this:A RAG prompt, courtesy of Andrei BondarevRAG (Retrieval-Augmented Generation) is just another prompt, where you inject your context somewhere in the middle (hoping the LLM will prioritize that knowledge over the previous one). And yes, the three dashes are really important (since prompt are in plain English, and not in JSON/YAML/protobuf).What are we trying to solve?My problem is simple: I want to fetch my beloved Zurich lake water temperature; but hey, no API is available (no weather API for water temperature)!TL;DR Let’s say you you want to talk to a Website and ask a question.First you need to retrieve its content (curl/wget)Then you want to inject this information into a prompt template.Then use the LLM ability to summarize/infer useful information.A high level diagramI’m a swimmer and I love swimming in the lake in summer. However, water temperature is not advertised as well as air temperature via APIs. You have a bunch of German websites with some tables which change every year — so it doesn’t seem smart to build a proper parser there. I’ll let the LLM handle the complexity.A simple googling of “zurich see wasser temperatur” fetches some websites:https://www.bodenseee.net/wassertemperatur/zuerichsee/https://www.badi-info.ch/_temp/zuerichsee-temperatur.htmhttps://www.zh.ch/de/umwelt-tiere/wasser-gewaesser/messdaten/wassertemperaturen.htmlYou don’t speak German? Welcome to my world!Detecting temperature from a picture? I like your thinking! That’s what Gemini 1.5 excels at!My favourite “badis” (Swiss term for lido) which are close to my home are Seebad Enge (with fancy and elegant vibe, evening party, .. opens at 8am) and Seebad Utoquai (for Ironmen and grannies, opens at 7am). They’re in front of each other but, due to current, they often have 1°C difference (~half 1°F if you insist with that imperial nonsense).Prerequisites and installation: Ollama and GemmaTo run this, I will not use a Google Cloud product, for once, I’ll just use:Gemma 7B (https://ai.google.dev/gemma), Google’s open model.Ollama (https://ollama.com/) as a conveniente package managerI’ve tried Ollama on a long intercontinental flight to the Philippines and it changed my life: an LLM running in localhost with no internet connection?!? Sign me up for this! And you can get open models from Facebook, Google, Microsoft, Mistral, OpenAI, .. I also love to create cheap embeddings with a model like nomic-embed-text , my favorite.Download and install ollama for your OS (instructions in https://ollama.com/download)Download gemma: ollama pull gemmaClone my code: git clone https://github.com/palladius/genai-googlecloud-scriptsenter the 15-ollama-gemma-RAG-curl-ruby/ folder.And you’re good to go!The promptSo here’s a prompt I refined after some trial and error (wasser-temperatur-rag.prompt.erb):# Note this code is ruby ERB (the ruby equivalent of python's Jinja)Can you please tell me the Water Temperature of Seebad Enge and Seebad Utoquai from this doc?I'll attach a document I just downloaded from the internet with current temperatures as of&lt;%= date_today %&gt;.=== Website curl ===Here are the real temperatures:&lt;%= rag_from_website %&gt;=== Sample answer ===Answer should be in JSON, something like:{     "Seebad Enge": ".." ,     "Seebad Utoquai": ".."}=== Your answer ===Your JSON answer (make sure to subsitute temperature with intefers you got from the Website Curl, also avoid the ```json``` part since its redundant):The codeI created some simple curl wrapper in Ruby 💎 (you can of course use your own favorite language1 It’s so small and simple you won’t be able to resist porting in your fav language!) in curlit.rb.# More details here: https://github.com/palladius/genai-googlecloud-scripts/blob/main/15-ollama-gemma-RAG-curl-ruby/wasser-temperatur-rag.rbdef main(verbose: true)  # 1. get output frm website  rag_content = curlit(url: 'https://www.stadt-zuerich.ch/ssd/de/index/sport/schwimmen/wassertemperaturen.html')  # 2. renders the prompt with this information  rendered_output = substitute_with_rag(template_path: 'wasser-temperatur-rag.prompt.erb', rag_content:)  # 3. Calling Ollama takes a while, better to tell the user they'll have to wait a bit  puts "⌛ Now lets wait for gemma to process it.. popen" if verbose  # 4. why piping in bash when you can do it natively in ruby and manage errors here?  json_output = pipe_into_gemma(rendered_output:)  # 5. Save onto JSON -&gt; see  save_sanitized_output_as_json(json_output:, file_name: 'output.json')endHere’s how the execution looks like for./wasser-temperatur-rag.rb :ricc@derek:🏡~/genai-googlecloud-scripts/15-ollama-gemma-RAG-curl-ruby$ ./wasser-temperatur-rag.rb⌛ Now lets wait for gemma to process it.. popen{     "Seebad Enge": "18.5°C",     "Seebad Utoquai": "18°C"}Is it correct? Let’s check:Screenshot taken a few minutes after the code was executed on 2024–06–02: https://www.stadt-zuerich.ch/ssd/de/index/sport/schwimmen/wassertemperaturen.html👍 As you can see the output is as I expected. Note that if you prefer Fahrenheit, it’s a trivial change to the prompt! remember:IMHO, this sums up the AI revolution!This is too complicated! You promised me a one-liner!So you’re a lazy developer! I like you, we should be friends!RAG can be as simple as Retrieve and Ask a question, so it can becomes as simple as: curl website | ollama run gemma "Ask a Question":# See Makefile for more exmaples$ ./curlit.rb https://www.boot24.ch/chde/service/temperaturen/zugersee/ | ollama run gemma Tell me the current water temperature of Zuger SeeThe current water temperature of Zuger See is **17°C**.I would have broken it down to two lines for readability but — a challenge is a challenge! 😃Wait a minute — is it really 17°C? Or did they just hallucinate?The Zugersee water temperature todayYup, seems like 17°C! And TA-DA!📚 More readingsCode of this article: https://github.com/palladius/genai-googlecloud-scripts/tree/main/15-ollama-gemma-RAG-curl-rubyMy Gemini News Crawler full-fledged RAG code: https://github.com/palladius/gemini-news-crawlerRAG one-liners: curling a website with Gemma was originally published in DevOps.dev on Medium, where people are continuing the conversation by highlighting and responding to this story.

== Article 2
* Title: 'Gemma is born!'
* Author: 'Riccardo Carlesso'
* URL: 'https://medium.com/google-cloud/gemma-is-born-c5ea9ba576ec?source=rss-b5293b96912f------2'
* PublicationDate: 'Mon, 26 Feb 2024 16:23:09 GMT'
* Categories: machine-learning, gemma, google-cloud-platform, curl, vertex-ai

As a rubyist, I love gems.So imagine my delight and surprise when last week Google announced Gemma, a family of open models available directly on `Kaggle`: google/gemma. Plus, it’s free!Gemma is born!But I know nothing about ML and Kaggle!If you’re like me, a CLI kind of person, fear no more! I found a way to call Gemma with cURL (“if you can curl it, you can call it in any language!” — said a wise man in Dodgeball — did he?).Don’t believe me? Check out my ugly bash code here: https://github.com/palladius/genai-googlecloud-scripts/tree/main/10-gemma-is-born/How do I install Gemma locally?I haven’t tried that one out, I’m sorry. It’s in my todo list.How do I install Gemma in the Cloud?As Barney would say “Glad you asked!”. I got hooked by this great video by Mark Ryan which got me started.Please note that in this case you need access to Google Cloud and have billing enabled. You need:1. A Gmail account (Google Account)2. A Google Cloud Project with billing enabled.If this doesn’t scare you off, the easiest way is to:Click on https://www.kaggle.com/models/google/gemmaClick on Gemma on Vertex Model Garden in that page.Follow instructions.Once done, you should have something like this:Gemma has been installedOk, so what now? How do I interact with Gemma?Glad you asked!Click on the model (blue line above).Under “Deploy and Test” tab you should see an awesome “Test your model ”. It accepts a JSON.It took me one hour of digging but I can tell you, the JSON can be as simple as this:{  "instances": [{    "prompt": "What's the difference between a city bike and a racing bike?",    "max_tokens": 1000  }]}The output will look like this:{  "predictions": [    ".. GEMMA_ANSWER_HERE ..."  ],  "deployedModelId": "6852805176160419840",  "model": "projects/980606839737/locations/us-central1/models/google_gemma-7b-it-1708849093570",  "modelDisplayName": "google_gemma-7b-it-1708849093570",  "modelVersionId": "1"}So writing a shell wrapper is as easy as cURLplus ajq(latest code here):# You just change these to your model_id and your project_idENDPOINT_ID="6294864597715255296"PROJECT_NUMBER="980606839737"# this contains the questionINPUT_DATA_FILE="gemma-input-hello.json"# this contains the answer (not really needed but good for training purposes)OUTPUT_DATA_FILE="gemma-output-hello.json"curl \    -X POST \    -H "Authorization: Bearer $(gcloud auth print-access-token)" \    -H "Content-Type: application/json" \    https://us-central1-aiplatform.googleapis.com/v1/projects/${PROJECT_NUMBER}/locations/us-central1/endpoints/${ENDPOINT_ID}:predict \    -d "@${INPUT_DATA_FILE}" | tee "$OUTPUT_DATA_FILE"PREDICTION=$(cat "$OUTPUT_DATA_FILE" | jq .predictions[0])echo -en "$PREDICTION\n"ConclusionsDeploying Gemma to Vertex AI and calling the model via curl is a breeze.And you, what are you waiting for?Gemma is born! was originally published in Google Cloud - Community on Medium, where people are continuing the conversation by highlighting and responding to this story.

== Article 3
* Title: 'Hey Gemini, explain me these pictures — in bash ‍'
* Author: 'Riccardo Carlesso'
* URL: 'https://blog.devops.dev/hey-gemini-explain-me-these-pictures-in-bash-06c03d0d0512?source=rss-b5293b96912f------2'
* PublicationDate: 'Thu, 14 Dec 2023 15:16:16 GMT'
* Categories: bash, gemini, curl, genai, google

Hey Gemini, explain me these pictures — in bash 🧑🏽‍💻Gemini is finally out!And… it’s multimodal! Which means, you can use both images and text to ask for questions (the output is only text — for now 😉).Note: all the code snippets (and images) in here are available in my GitHub repo.Let’s get started!Hey Gemini, describe what you see..Let’s start by an album by my favourite band:One of my favourite albums of all time — will Gemini recognize it?$ ./gemini-generic.sh images/genesis-selling-england.jpg Describe what you see# 🤌  QUESTION: Describe what you see# 🌡️ TEMPERATURE: 0.2 # 👀 Examining image images/genesis-selling-england.jpg: JPEG image data, JFIF standard 1.01, resolution (DPI), density 96x96, segment length 16, baseline, precision 8, 536x528, components 3. # ♊ Gemini no Saga answer for you:The cover of Genesis album Selling England by the Pound features a painting by British artist Paul Whitehead. The painting depicts a group of people in a park, with a man sleeping on a bench in the foreground. The people are allwearing clothes from the 1920s or 1930s, and the painting has a nostalgic, almost surreal feel to it. The colors are muted and the figures are slightly blurred, which gives the painting a dreamlike quality. The painting is also full of symbolism, with the sleeping man representing England and the people around him representing the different aspects of English society. The paintinghas been interpreted in many different ways, but it is generally seen as acommentary on the state of England in the 1970s.♊ The cover of Genesis’ album Selling England by the Pound features a painting by British artist Paul Whitehead. The painting depicts a group of people in a park, with a man sleeping on a bench in the foreground. The people are all wearing clothes from the 1920s or 1930s, and the painting has a nostalgic, almost surreal feel to it. The colors are muted and the figures are slightly blurred, which gives the painting a dreamlike quality. The painting is also full of symbolism, with the sleeping man representing England and the people around him representing the different aspects of English society. The painting has been interpreted in many different ways, but it is generally seen as a commentary on the state of England in the 1970s.A quick googling confirms that Paul Whitehead actually covered one of my favourite album of all times. If you love Genesis too and want to see me play Firth of Fifth, please check my youtube video.Let’s try this cat now:This is a cat from Google sample imagesGemini: A cat is walking in the snow. The cat is brown and white and has a long tail. The cat is looking at the camera. The snow is white and is covering the ground.How did I do it?If you check my bash script (gemini-generic.sh), you can see the request looks like this:data=$(_base64_encode_mac_or_linux "$IMAGE") # Mac or Linux should both work!# ...cat &gt; "$REQUEST_FILE" &lt;&lt;EOF{'contents': {      'role': 'USER',      'parts': [        {'text': '$QUESTION'},        {'inline_data': {            'data': '$data',            'mime_type':'image/jpeg'}}]    }}EOFThe hardest part is actually the base64conversion, and making it work both on my Mac and on my Linux (as our grand-parents say in Italy “You wanted /bin/bash.? Now you pedal!”).An Italian image, explained in ItalianThe city of XXX, in Italy. Seen from the YYY palace (surprise!). Picture from my colleague Daria../gemini-explain-image.sh images/italian-town.jpg[..] This is a view of the city of Trento, Italy from the Buonconsiglio Castle.Gemini (🇬🇧): This is a view of the city of Trento, Italy from the Buonconsiglio Castle.Let’s ask the same in Italian:$ GENERATE_MP3=true ./gemini-explain-image-italian.sh images/italian-town.jpg# 🤌  QUESTION: Descrivimi cosa vedi in questa immagine# 🌡️  TEMPERATURE: 0.2# 👀 Examining image images/italian-town.jpg: JPEG image data, JFIF standard 1.01, aspect ratio, density 1x1, segment length 16, Exif Standard: [TIFF image data, little-endian, direntries=1, software=Google], baseline, precision 8, 926x1230, components 3.# ♊ Gemini no Saga answer for you: La foto mostra una loggia con delle colonne in pietra che incorniciano la vista di una città. La città è circondata da montagne e si possono vedere i tetti delle case e le torri delle chiese. Il cielo è azzurro e ci sono delle nuvole bianche.# TTS_LANG: it-ITWritten .tmp.tts-output.json. curl_ret=0t.audio.encoded: ASCII text, with very long lines (65536), with no line terminatorst.mp3:           MPEG ADTS, layer III, v2,  32 kbps, 24 kHz, Monauralt.mp3: MPEG ADTS, layer III, v2,  32 kbps, 24 kHz, MonauralAll good. MP3 created: 't.La foto mostra una loggia con delle colonne in pie.mp3'Gemini (🇮🇹): La foto mostra una loggia con delle colonne in pietra che incorniciano la vista di una città. La città è circondata da montagne e si possono vedere i tetti delle case e le torri delle chiese. Il cielo è azzurro e ci sono delle nuvole bianche.As you see, Italian is more verbose (my wife says the same about me!) but it’s not aware of the Buonconsiglio Palace. Interesting! I presume the Italian model has less training material to learn from than the English one.Makes sense.Btw, I highly recommend Trento, I was cycling around there: great views and great wines!Comparing two imagesHow about comparing two images?Gemini constellation vs Saint Seiya’s Gemini saint.Some sample code is in my Makefile for convenience. try this:ricc@derek:~/git/genai-googlecloud-scripts/07-bash-gemini-multimodal-jam$ 🐼 !makmake compare-two-geminis ./gemini-generic-two-pics.sh  images/gemini-constellation.png   images/saga-blue-hair.jpg♊️ Question: Can you highlight similarity and differences between the two? Also, do you recognize the same person in both of them? 👀 Examining image1 images/gemini-constellation.png: images/gemini-constellation.png: PNG image data, 1675 x 1302, 8-bit/color RGBA, non-interlaced.  👀 Examining image2 images/saga-blue-hair.jpg: images/saga-blue-hair.jpg: JPEG image data, JFIF standard 1.01, aspect ratio, density 1x1, segment length 16, baseline, precision 8, 193x261, components 3. ♊️ Describing attached image: The two images are of the constellation Gemini and the anime character Gemini Saga. The constellation is said to represent the twins Castor and Pollux, while the character Gemini Saga is a Gemini Saint in the anime series Saint Seiya. Both images depict two figures that are connected to each other. The constellation is made up of stars, while the character is a human.♊ Response: ️ The two images are of the constellation Gemini and the anime character Gemini Saga. The constellation is said to represent the twins Castor and Pollux, while the character Gemini Saga is a Gemini Saint in the anime series Saint Seiya. Both images depict two figures that are connected to each other. The constellation is made up of stars, while the character is a human.Today we’ve learnt something we certainly didn’t know: a constellation is made of stars, while the guy on the right is human 😃Introducing Audio!Why don’t we throw some audio in the mix?I’ve added a tts.sh , which creates an MP3 out of an english (or Italian!) text given in ARGV. Convenient uh?My kids beside American Santa Klaus (we live in Zurich, there’s a Santa for every language and ethnicity!)A few weeks ago my kids went to visit Santa Klaus.. the American Santa — they’ll tell you there’s another who speaks German instead, he’s called Samiklaus, they still can’t decide if its the same guy — my kids are X and Y year old; how old? Let’s ask Gemini!$ make age-test# equivalent to:$ GENERATE_MP3=true ./gemini-generic.sh images/ricc-family-with-santa.jpg Tell me the age of the people you see, from left to right.# 🤌  QUESTION: Tell me the age of the people you see, from left to right.# 🌡️  TEMPERATURE: 0.2# 👀 Examining image images/ricc-family-with-santa.jpg: JPEG image data, JFIF standard 1.01, aspect ratio, density 1x1, segment length 16, Exif Standard: [TIFF image data, little-endian, direntries=3, software=Google], baseline, precision 8, 1164x826, components 3.# ♊ Gemini no Saga answer for you:1. 30-352. 2-33. 40-454. 2-35. 60-65[..]All good. MP3 created [..]Now I’m older than 40–45 (46) so technically speaking this is a mistake, but as a human interaction I will consider it as a success 😉Now this is not the best of MP3s, but it works! Check out ricc-family-with-santa.jpg.mp3.You can also find Trento in Italian here: italian-town.jpg.mp3.Something useful now: understand a diagram!A colleague told me yesterday: the power of Gemini is that not only “he” understands text and images, also the very complex relationship between items in a diagram. This morning my Accrux earphones wouldn’t work, so I decided to understand how they work. I downloaded the User Manual, uploaded to Gemini as image, and asked Gemini a few questions.I’m not so young anymore so I can’t read this unless it’s printed on A3. And I respect Amazon too much!From UI, this is easy peasy. Upload image and ask question:And what about bash? Let’s do the same from CLI:$ make read-instruction-manual-for-me [..]./gemini-generic.sh images/instruction-manuals/Acrux-User-Manual-4700503.png '1. How do i TURN it on? 2. Where is the power button located? 3. Is this the one called ANC?'# 🤌  QUESTION: 1. How do i TURN it on? 2. Where is the power button located? 3. Is this the one called ANC?# 🌡️  TEMPERATURE: 0.2 # 👀 Examining image images/instruction-manuals/Acrux-User-Manual-4700503.png: PNG image data, 1664 x 929, 8-bit/color RGBA, non-interlaced. # ♊ Gemini no Saga answer for you:1. Long press the power button for 2 seconds.2. The power button is located on the right earcup.3. Yes, this is the one called ANC.# Note: No mp3 file generated (use GENERATE_MP3=true to generate one)My question (I actually asked the questions one by one, so think of it as an avalanche-chat):How do i TURN it on?Where is the power button located?Is this the one called ANC?# ♊ Gemini answer:1. Long press the power button for 2 seconds.2. The power button is located on the right earcup.3. Yes, this is the one called ANC.Bingo!An unexpected Games of Thrones plot twistThis is the avatar I use in Google. I’m really curious to see what gemini can infer from here, also because I used some filters.Riccardo in the Amsterdam office, a few years/kilos ago.$ ./gemini-explain-image.sh images/ricc-logo.png[..]This is a photo of a man standing behind a Google Cloud Platform cutout.The man is smiling and wearing a shirt that says, “That’s what I do,I drink and I know things.” The background is a brick wall with blueand white accents.♊ Gemini: This is a photo of a man standing behind a Google Cloud Platform cutout. The man is smiling and wearing a shirt that says, “That’s what I do,I drink and I know things.” The background is a brick wall with blueand white accents.And I thought! Of course, this is my favourite Games of Thrones t-shirt. Let’s see if he knows:Q: Do you recognize the quote in this person tshirt?$ GENERATE_MP3=true ./gemini-generic.sh images/ricc-logo.png Do you recognize the quote in this person tshirt[..] "That's what I do, I drink and I know things" is a quote from the TV show Game of Thrones, said by the character Tyrion Lannister.♊ Response: “That’s what I do, I drink and I know things” is a quote from the TV show Game of Thrones, said by the character Tyrion Lannister.And you also have the MP3 if you wish: images/ricc-logo.png.mp3Chapeau, Gemini!ConclusionsCalling Gemini is easy, fun and powerful!Easy. If you can invoke Gemini via curl, imagine how easy it is to invoke it with your favourite language! Try out our SDK in Python, Node, Java, Go. For everything else there’s REST/cURL!Fun. look at how many use cases I’ve shown in this page: comparing two images, asking questions abuot an image, a writing, age of people, .. possibilities are endless.Powerful. Multi-modal is a game changer. And for what I hear, more modes are coming. 😉Did you like this? Want more of this? Write it in the comments!RiccardoHey Gemini, explain me these pictures — in bash 🧑🏽‍💻 was originally published in DevOps.dev on Medium, where people are continuing the conversation by highlighting and responding to this story.

== Article 4
* Title: 'Hey Bard, write a responsive Javascript Search Engine app for me..'
* Author: 'Riccardo Carlesso'
* URL: 'https://medium.com/@palladiusbonton/hey-bard-write-a-responsive-javascript-search-engine-app-for-me-b2585e55385e?source=rss-b5293b96912f------2'
* PublicationDate: 'Mon, 20 Nov 2023 14:01:41 GMT'
* Categories: javascript, bard-ai, google-cloud-run, search, json

I suck at Javascript. 😒 It’s time to admit it. 😅 Let’s see how Bard helped me overcome this limitation… and create this app!I tried for years to cope and survive in a world which seems to be unable to exist without Javascript, and last weekend I succumbed. Time to ask your favorite JS developer Chris to point you at some good documentation and start reading about this weird language.Promises, promises… unless? Wait, what if an LLM could code the app for me? Maybe I’m not good to start the project myself, but what if Bard can do it for me, I should be able to tweak the code myself.TL;DR If you don’t want to read my Italian drama, jump to the code (or see the result on Cloud Run).Two days ago, I was babysitting my kids; playing with my mobile phone while they were playing with Lego…Little Seby in the Lego room in Google Zurich.. and I started asking Bard a question. But wait, “how do I make sure the question remains available when I go back home to my big computer?” I was quite surprised by the answer.The Coding conceptWhat’s my idea? Say you have a gazillion articles / assets and want to be fast at searching on them. But you can’t accept a 1–2 seconds latency from a typical server-side website search.Flash is searching through all my docs ina static, local JSON! Barry likes to win easy :)I want a search bar where I can start typing stuff and the choice starts to diminish. Then I want to have a number of cards with the results (from a static JSON — I’ll make it dynamic in a next episode!). I also want to have some rudimental clicking to narrow down the choice, say with a Boolean “is this a technical article).A quick and customizable search bar.Write a good promptMy kids are delving into plenty of Legos, so I have plenty of time to try a verbose and well planned prompt. After all, I want it to write an app for me! Let’s not save time and details.Prompt 1: “I would like to build a small and responsive search engine. The DB Is small and static so I don’t need anything complicated. I just want to have a frontend JavaScript where you start typing a word and it searches for all the elements matching this word in title or description. The only important thing to me is responsiveness so every time you type a letter it starts selecting just things matching it, so you want to write say “pistachio”, the selection should start kicking in already with ‘p’, ‘pi’, ‘pis’, and so on. Can you help me write the code?”I’m so ignorant on JS that I’m not even sure this is something you can do fully on client-side ( index.html+ script.js) or if you need some server-side effort (add node.jsto the mix) to provide the JSON (although on the server-side I have 20-year expertise — this part I can do without help).Bard reply might surprise you..Bard answerNow, Bard started with a confident “Sure, here’s the JavaScript code for a small and responsive search engine that works with a static database:” but I don’t trust what I see. Plus, I don’t have a computer with me, so I can’t try the code. I asked him to do two things that Google is really good at doing:export in email (cheap / persistent)export to GDoc (richer / can edit)Look:Bard exports to GDocs and GMail in case you want to elaborate on your brainstorming idea.When I was home I had plenty to choose from: my 📬 GMail inbox, my 📃 Google Docs link. what I didn’t know is that the conversation is saved conveniently in a top left tab, and you can pin it — until you’re done with your project.I paste the JS / HTML code and… it works FROM SCRATCH! Teh first tentative works! Wow I’m impressed. I start putting the code into github for posterity and for making potentially breaking changes.Let’s add complexity. Add a Boolean and multi-parameter search!Prompt2. “Wow! Say I want to do something a bit more complex for example selecting a Boolean (isTechnical=true/false) which is in the frontend as checkbox and in the JSON, and I want to sort the result by some kind of rating? Can you help me add those two functionalities both to html and to JavaScript?”Result:The result is impeccable — except with the Pasta Primavera which definitely not 🇮🇹-compliant!Note that Bard gives me the index.html code, the script.jscode , and also a pre-baked JSON which responds to my requirements (a isTechnical boolean and a float rating).Add little nits: CSS and CardsPrompt 3. Wow this is amazing! Final thing, can you share a little css snippet to make this look nice and professional? I’m bad at CSS.This made the final visualization a bit better (not much).Prompt 4. Fantastic! Last thing. I would like to visualize the search result as nicely formatted cards, think of three rectangles per row, with title description and maybe a small image turned into a square with rounded corners. Can you help me with html and CSS?And this is the first time Bard makes a mistake. He gives me a HTML code which seems like Angular (ngFor ):This is a mistake: `ngFor` only exists in Angular framework (I presume?)ResultThe app is currently served by cloud run here: https://js-simple-search-bsl7ylv4hq-ew.a.run.app/This is the final result in GIF format:The functionalities it demonstrates are:responsive sub-JSON search function (every letter triggers a search on Title or Description)boolean selection (isTechnical or not)Sort by rating (number) or by Title (string)ConclusionsAs a person who can’t even code a strlen() in Javascript, I was able to create a simple / dumb — yet customized — website within an hour on a Saturday afternoon (when my wife was babysitting).bard.google.com gave me good code from the beginning, and responded correctly to the next 2 questions. The first error was at the 4th prompt (!). Also, on the negatives, the CSS for cards was pretty ugly so I had to fix it myself (luckily I speak some rudimental Boostrap).I found Bard can be a pretty good companion if you have time to kill away from keyboard, and you want to go with the flow in some brainstorming phase, ready to copy the content when you’re back to your workstation.

== Article 6
* Title: 'What is toilet paper’s right side?'
* Author: 'Riccardo Carlesso'
* URL: 'https://medium.com/@palladiusbonton/what-is-toilet-papers-right-side-8da0504d6d0b?source=rss-b5293b96912f------2'
* PublicationDate: 'Tue, 08 Aug 2023 16:37:20 GMT'
* Categories: toilet-paper, ruby-on-rails

There’s very little on this planet as polarizing as “the right position of toilet paper”: what I call cis-centralis /pendens, or trans-centralis/murālis? (yup, I just made those up — start googling 👹).A puffin trying to find the right position to his toilet paperAs a Ruby on Rails developer, I’ve been long interested in Default over Configuration (and POLA). What is the default/correct solution? I thought I knew.. until I got married.myhome:  bath_ricc:    toilet_paper_position: '?!?' # looking for a golden default..  bath_kids:    toilet_paper_position: '?!?' # must clearly be the same golden default!The official SolutionThe inventor of toilet paper patented the solution in 1891 (patent US459516, apparently Seth Wheeler was a Googler ante litteram).However.... It’s actually more complicated than it looks.I have this sheldonic tendency of thinking people disagreeing with me on trivial things being automatically wrong; however, I often stand corrected. This is one of those times :) After consulting a number of people who disagreed with me, trying to hold my initial disgust in this barbaric act of “muralic paper” (Are you crazy?!? It gets dirty just before touching your butt!) I realized there are cases where that configuration can actually do better.If you have a cat, the cat will likely like to play with the paper.If you have a son, say his name is Sebastian . I don’t have any experimental proof that a daughter would yield the same results. Please comment to provide further data points.There might be other occasions where this might be true (eg, windy location, gravity working against you, lot of liquid close to the precious paper, ..). Please contribute with your own experience.ConclusionsIn this factious article, I took a dilemma, showed the solution, and then showed that the solution can fail due to .# This is the perfect solution which works for my home.my_home:  bath_ricc:    toilet_paper_position: pendens   bath_kids:    toilet_paper_position: muralisI believe after reading this, you will be a more complete human. You’re welcome 🤣

== Article 7
* Title: 'Spaghetti Bolognese don’t exist!!1!'
* Author: 'Riccardo Carlesso'
* URL: 'https://medium.com/@palladiusbonton/spaghetti-bolognese-dont-exist-1-2088d85909dd?source=rss-b5293b96912f------2'
* PublicationDate: 'Fri, 21 Apr 2023 16:09:23 GMT'
* Categories: 

(yes, the exclamation marks are correct 😉)Spaghetti Bolognese: Everyone knows them… except Italians.An imaginary dish, .. just like square root of -1, or like a word which doesn’t exist... just uselesserRight, read it again if you don’t believe me… in Italy we don’t prepare that kind of pasta.What the hell, you may be wondering… Italy is famous for spaghetti and bolognese sauce (that we call “ragù alla bolognese” or simply ragù, (from ragoût), but we would never mix these two things in the same dish).Why oh why, you may as well think? I think the reason can be found in two ways.First, they come from two different cultures. Spaghetti come from the south, where a simpler tomato, basil, and veg sauce would seem more appropriate.Second, spaghetti are slippery, so they’re not as good to ‘retain’ a demanding sauce as a beef ragù is. As every bolognese person can tell you, appropriate pastas for bolognese ragù can be: tagliatelle (first choice), pennette/penne/mezzepenne, conchiglie, fusilli, maccheroni, … in general every form of ‘pasta rigata’ (ribbed pasta). Pasta rigata is a pasta that is not smooth, so thas sauce is more likely to stay with the pasta, instead of slipping down. I think the main reason why every person from Bologna is horrified by the mere idea of associating spaghetti with our proud ragÃ¹ is that we perfectly know (because everyone has made that mistake once in their life) what happens if you do that: spaghetti would ruthlessly come up your fork completely naked of any red or meaty trace… just to leave a gloomy surprise in the very end: a bloody pool of meat and tomato just looking at you as if asking “Now what?”. And unless you are Italian, you don’t know what scarpetta is. but that’s another story.What does wikipedia say?As Wikipedia (as of 19dec09) says about Bolognese_sauce:[…] Bolognese sauce known in Italian as ragù alla bolognese, pronounced [, ragù bolognese, or simply ragù) is a meat-based sauce in Italian cuisine, typical of the city of Bologna. It is customarily used to dress tagliatelle al ragù and to prepare lasagne alla bolognese.Italian ragù alla bolognese is a slowly cooked meat-based sauce, and its preparation involves several techniques, including sweating, sautéing and braising. Ingredients include a characteristic soffritto of onion, celery and carrot, different types of minced or finely chopped beef, often alongside small amounts of fatty pork. White wine, milk, and a small amount of tomato paste or tomatoes are added, and the dish is then gently simmered at length to produce a thick sauce.Outside Italy, the phrase “Bolognese sauce” is often used to refer to a tomato-based sauce to which minced meat has been added; such sauces typically bear little resemblance to the Italian ragù alla bolognese, being more similar in fact to the ragù alla napoletana from the tomato-rich south of the country. Although in Italy ragù alla bolognese is not used with spaghetti (but rather with flat pasta, like tagliatelle),[2][3][4] so-called “spaghetti bolognese” has become a popular dish in many other parts of the world.[whereI’m not Italian: what can we do to comply?If you weren’t born with the privilege of 🇮🇹 Italianity, I’ve built a software for you to teach you the proper abbinamenti (couplings) between pastas and sauces.It’s simple, install my app from github: https://github.com/palladius/pastaIt’s written in Ruby on Rails (of course), it’s fully Dockerized, and features a beautiful matrix of pastas/sauces:The code which defined good condiments is here, under db/seeds.rb .

== Article 8
* Title: 'Migrate ☁️ GCP projects across organizations, with gcloud'
* Author: 'Riccardo Carlesso'
* URL: 'https://medium.com/google-cloud/how-to-migrate-projects-across-organizations-c7e254ab90af?source=rss-b5293b96912f------2'
* PublicationDate: 'Tue, 18 Apr 2023 13:16:26 GMT'
* Categories: gcp-security-operations, google-cloud-platform, migration

Nel mezzo del cammin di nostra vita, mi ritrovai per una selva oscura, ché la diritta via era smarrita”— Dante Alighieri(*), Divine Comedy(*) the Italian version of Shakespeare, just betterTranslated for non-🇮🇹: some day I was encouraged by some external entity to move a lot of projects from 5 of my organizations (source) to another organization (destination).TL;DR If you find this article too long and you want to jump to the code, click on this 🐙😺 gist.My two boys in front of The Gates of Hell, Musée Rodin, Paris, 2022.Since I’m the best kind of Software Engineer — the bad coder but lazy kind 🌝 — I decided to script all my move and document for posterity. Also showing you the mistakes I found along the way might be helpful (maybe?).This is explained in this GCP page(s): https://cloud.google.com/resource-manager/docs/project-migrationPlease remember to dump your current IAM config for the 2+ organisations in case you want to recreate the previous config you just changed. Having a local JSON config for your Org is always a good thing to do. 😉 For instance:$ gcloud alpha organizations get-iam-policy $ORG_ID \ - format json &gt; out/org-$DOMAIN-iam.jsonYou can also add specific policies you care about (see below why this is important):$ gcloud resource-manager org-policies describe constraints/iam.allowedPolicyMemberDomains \ --organization $ORG_ID | tee -a out/org-$DOMAIN-policies.logKnow the current state of the worldYou need to know the state of the world (your world). The best way for me to understand where I stand is this:Use this awesome repo https://github.com/palladius/org-folder-projects-graph I wrote a few years ago. Note: It launches gcloudonce per folder, it’s super-inefficient (uses bash over APIs), but has the nice aspect that it keeps all JSON from gcloud locally. This is a big plus in every case except today: ▶️ after the move you might need a make cache-clean before re-launching it.Launch the script for one Org. Sample output:Output from an Org dump script written by an ItalianIf you don’t care about the folder structure at all, a simpler way is to just invoke something like this:# Option 1: Flat structure (simple)$ gcloud projects list - filter \  "parent.id=$ORG_ID AND parent.type=organization"For example:flat taxonomy from script1Note this won’t work if you have a complex hierarchy, which is why you probably want to use my script to get all the ramification of your org.You can also play with GCP Asset Inventory (see great stackoverflow tip) to get the list without the 🍕 pizza slices, but you’d be sadder 😫 , I’m sure.# Option 2: Tree structure, with AssetInventory.$ gcloud beta asset search-all-resources \  --asset-types='cloudresourcemanager.googleapis.com/Project' \  --scope="organizations/$ORGID" | egrep '^name:' | cut -d/ -f 5Whatever your workflow, I’m pretty sure you’ll have exceptions, which is why having a spreadsheet (https://spreadsheet.new/ ) will help you big time. I state the source org, destination org, source folder,. source project id, expected destination folder, and notes for my exceptions.Please also read this https://cloud.google.com/resource-manager/docs/handle-special-cases for special cases, like VPC-SC or GCS Bucket lock.Let’s now find out the IAM state for your org. This is pretty sweet and took me a while to research and adapt:# Beautiful query which flattens (multiple roles &lt;=&gt; multiple identities).$ gcloud organizations get-iam-policy "$ORG_ID" \  -flatten='bindings[].members' \  -format='table(bindings.role,bindings.members)' |   tee "t.org-iam-policy.$ORG_DOMAIN.txt"ROLE MEMBERS[..]roles/billing.admin         group:gcp-billing-admins@example.orgroles/billing.admin         user:ricc@example.orgroles/billing.creator       domain:example.orgroles/browser               group:gcp-billing-admins@example.orgroles/cloudasset.owner      user:palladius@example.orgroles/cloudasset.owner      user:ricc@example.orgroles/orgpolicy.policyAdmin group:gcp-org-administrators@example.orgroles/orgpolicy.policyAdmin user:riccardo@example.orgroles/resourcemanager.projectCreator user:palladiusbonton@example.orgroles/resourcemanager.projectMover   user:ricc@example.orgI don’t want to read the docs: Let’s first try brute force!I hate it when someone provides me with a working solution and I apply it and don’t know the mystical secrets that led to it. (I invented the half derivative when I was 16, just so you know — and yes, as you can imagine, it’s useless).So let’s try to smash our head over it, one mistake at a time.Error 1 : “The caller does not have permission”Let’s try it, the command is simple — but won’t work the first 27 times you try it. You have my word. But still, try it. I’ll use the same ids as in public docs:# Your Org Admin account, and gcloud already working for it:export POWER_ACCOUNT='my-power-account@gmail.com'# SRC ORG: 12345678901 source.example.com export SRC_ORG_ID="12345678901"export SRC_ORG_DOMAIN='source.example.com'# DST ORG: 45678901234 destination.example.comexport DST_ORG_ID="45678901234"export DST_ORG_DOMAIN='destination.example.com'$ gcloud beta projects move my-project-in-src-org \  --organization=$DST_ORG_ID --quiet- '@type': type.googleapis.com/google.rpc.DebugInfo  detail: |-    [ORIGINAL ERROR] generic::permission_denied: The caller does not have permission    com.google.apps.framework.request.StatusException: &lt;eye3 title='PERMISSION_DENIED'/&gt; generic::PERMISSION_DENIED: The caller does not have permission [google.rpc.error_details_ext] { code: 7 message: "The caller does not have permission" }# Computer says no!The most powerful IAM permission you can have on a GCP Organization is organizationAdmin. You’d think that if you have that power, you can do anything in that universe, right? Think twice! There are additional powers that role doesn’t have (and I’m kind of relieved it is this way).One of them is the OrgPolicyAdmin, which means that as OrgAdmin, you first need to give yourself that power before you can use it (not very UNIX, I know, but definitely safer).# Set IAM for SrcOrg$ gcloud organizations add-iam-policy-binding $ORG_ID \  --member='user:$ACCOUNT' \  --role='roles/resourcemanager.organizationAdmin' \  --role='roles/resourcemanager.projectIamAdmin' \  --role='roles/resourcemanager.projectMover'  \  --role='roles/orgpolicy.policyAdmin'  \  --condition=NoneFor this command to work, you need the issuer (gcloud config get account) to have the power to grant — but this is beside the scope of this doc.In the UI it will look something like thisNote: Org Policies are documented here.Error 2: Constraint `constraints/resourcemanager.allowedExportDestinations`Let’s try to migrate a project now:This is NOT where I would have expected a Input/Output error! 😆Next step: Let me configure the allowedPolicyMemberDomains policy first. (Why? It failed but I forgot to capture the error, my bad. For this error you just need to trust me).# This might fail..$ gcloud beta projects move "my-project-in-src-org" \  --organization="$DST_ORG_ID" --quiet# This sets target customer_id!$ gcloud resource-manager org-policies allow --organization "$SRC_ORG_ID" \  iam.allowedPolicyMemberDomains 'C04abcdef' # gives access to SrcOrg to Dest idNote. The “C0..” id is the Directory Customer Id you get from gcloud organization list for your destination org.- I’m ready… Now it’s going to work, I’m sure! - Oh wait… 🙈Damn, another error!What does it mean? It means that you need to configure your “Org Firewall” to allow projects out of your Source Organization. If you’re a Cisco Certified engineer — you already know what error is coming next.. Allowlisting palooza 😜!# Aloow SRC to export to DSTgcloud resource-manager org-policies allow --organization "$SRC_ORG_ID" \  resourcemanager.allowedExportDestinations \  "under:organizations/$DST_ORG_ID"# Note the "under:" needed to pass the policy all the way down from that folderError 3: constraints/resourcemanager.allowedImportSourceThis is similar to the error above, but it’s from the receiving end.To fix: damn I did it on the UI. My apologies. I would presume it’s really the symmetrical opposite, like:# This is me guessing but I should be too far. # TODO(ricc): remove powers from DST and try againgcloud resource-manager org-policies allow --organization "$DST_ORG_ID" \  resourcemanager.allowedImportSource \  "under:organizations/$SRC_ORG_ID"[optional] Refining the securityNote that to make things simple I gave a single user OrgAdmin for two organizations.simple/insecure (pet project). The simple way is to have a single powerful account (gcloud account, eg “poweruser@company.com”) which has access to both SRC and DST orgs. This worked for me, as I was the sole owner of them all and I was under time pressure.complex/more secure (enterprises). In a more enterprise scenario, you’d have a less pressing time concern and you would probably be obliged to have smaller IAM permissions on both sides, probably having two individuals to carry on these two tasks. Which is why it’s nice to have them gcloud-ed.In the second case, follow the docs:Source Org :IAM: roles/resourcemanager.projectIamAdmin in the project to move (but if I want to do it at scale I’ll set it up in the org)IAM: roles/resourcemanager.projectMover in the parent resource.Again, if you’re lazy you can just set these two at Org level and get it done once and for all. But then remember to remove this access at the end of the org move. You can also a time-bound IAM constraint ending tomorrow — this is for lazy people like me who don’t trust themselves to remember to close a parenthesis tomorrow and rather close it as you open it.OrgPolicy: constraints/resourcemanager.allowedExportDestinations. You can set the domain id (“C0somethin”) as allowed destination or you can be lazy as me and just set them ALL, depending if you’re an enterprise who wantgs to do it well or you just want to get it done soon and you don’t care much of the org you leave behind.On the destination organization:IAM: ProjectMoverOrg Policy: constraints/resourcemanager.allowedImportSourceMeta-Scripts and tidy migrationIf you migrate 300 projects from 5 orgs into one, you might want to use Folders or it’ll be a very nasty place tomorrow (“where does this project come from again?”). You can track pre-migration state in a few ways: you can dump the state on a lot of TXT in local file (but I usually remove them with my ruthless make cleans), on a Google Spreadsheet, or have your business logic do the job for you. Let’s explore this one..Here’s the migration in a nutshell: all the Source folder structure complexity is flattened in the Destination under a single special folder.I had some fun coding in Ruby (in a private repo which is in no shape to be publicized unless you make a lot of noise in the comments 😉).Nothing better than a script which writes a script for you. This is useful when you want to iterate through 10 migrations but you know that ONE project doesnt fit into it -&gt; I create a 10 line blurb and then I just comment out the one I dont need. It’s also good for documenting which commands you ran on local file. Let me show you.$ bin/13-gcloud-move-projects-to-joonix-under-domain.rb palladius.eu palladius-eu-infra prova-enonomai-palldius-eu  gcpprojects2sheets [...]gcloud beta projects move 'palladius-eu-infra' --folder='1038774614299' --quiet       # migrate project given via CLI to proper subfolder of palladius.joonix.net under palladius.eugcloud beta projects move 'prova-enonomai-palldius-eu' --folder='1038774614299' --quiet       # migrate project given via CLI to proper subfolder of palladius.joonix.net under palladius.eugcloud beta projects move 'gcpprojects2sheets' --folder='1038774614299' --quiet       # migrate project given via CLI to proper subfolder of palladius.joonix.net under palladius.euNote, this commands are dumped into a deterministically-named bash script which contains the commands, so I can comment out the projects I don’t want to move (yet); the deterministic naming means that if I run it again, it will re-apply the same logic to the same file, which is good if you have it in version control and if the logic is not trivial (eg, find all projects under a folder 😉).Let’s now call my 🍕 pizza software (TM) after a make cache-clean to see if the migration worked:$ git clone https://github.com/palladius/org-folder-projects-graph/ $ cd org-folder-projects-graph/(base) ricc@mbp:🏡~/org-folder-projects-graph$ ./recurse_folders.rb palladius.joonix.net[...]├─ 📂 133363080569 (Spostamenti CrossOrg)    ├─ 📂 737267668168 (SPECIAL_ORPHANS)        ├─ 🍕 cicd-platinum-test041 (713582791007)    ├─ 📂 1038774614299 (palladius-eu)        ├─ 🍕 original-bot-383907 (642248137380)        ├─ 🍕 prova-enonomai-palldius-eu (898096115869)        ├─ 🍕 gcpprojects2sheets (383820962508)        ├─ 🍕 palladius-eu-infra (845199147079)[..]And it did! A round of applause.Plenty of magic here: my script accepts a FolderId ( 🇮🇹 “CrossOrg Movemements”) and it searches for the subfolder named like the domain (creating it if its not found). Wow!My script was configured to generate a folder called like the org (changing dot with dash for obvious reasons): 133363080569. My script would create a subfolder if needed, get that folder id and create the scripts for me:gcloud beta projects move 'palladius-eu-infra' - folder='1038774614299' - quiet # migrate project given via CLI to proper subfolder of palladius.joonix.net under palladius.eugcloud beta projects move 'prova-enonomai-palldius-eu' - folder='1038774614299' - quiet # migrate project given via CLI to proper subfolder of palladius.joonix.net under palladius.eugcloud beta projects move 'gcpprojects2sheets' - folder='1038774614299' - quiet # migrate project given via CLI to proper subfolder of palladius.joonix.net under palladius.euAfter a lot of lost hours debugging, I wrote my bash code-writing ruby script to add meaningful comments aside the command. This was a stroke of genius (for my limited coding abilities) since all this movement includes non-mnemonic numbers, so using the domain names after the comment helped me understand what i was doing.Another error: bad chars in project name (!)Now, I don’t know how many of you will find this error, but if you do, Google is your friend (and mine too) and you’ll find this article, I’m sure 😄I had project ids since 2012, and I’ve given them names which included parenthesis. For instance, the project id palladiusbonton-nobilling had an astonishing description (Project Name): “PalladiuBontonTest (No Billing)”. Now this was never a problem in my life until some day… some of them gave me error. Interestingly enough, most came from one single error type: I gave my project ids a bad name: I should have known better than Bon Jovi!Solution: I scripted in 💎 ruby a project description change which just removes the parenthesis (and the regex is DRY in case I find something new). To be on safe side, I change bad chars into empty spaces 🙂, as I love Queen more than Bon Jovi.$ bin/11-migrate-orphans.rb [..]goliardia2                     Goliardia2 (no billing uffi)              576689998257palladiusbonton                palladiusbonton (billing disabled)        606248867298palladiusbontontest-nobilling  PalladiuBontonTest (No Billing)           690861376600riccardo-chatroom1             riccardo-chatroom-one (billing disabled)  941891472972# EXECUTE this to fix the project: gcloud projects update 'palladiusbonton' --name='palladiusbonton  billing disabled ' # Former description was: 'palladiusbonton (billing disabled)'palladiusbontontest-nobilling // 690861376600 ### 'PalladiuBontonTest (No Billing)'# EXECUTE this to fix the project: gcloud projects update 'palladiusbontontest-nobilling' --name='PalladiuBontonTest  No Billing ' # Former description was: 'PalladiuBontonTest (No Billing)'riccardo-chatroom1 // 941891472972 ### 'riccardo-chatroom-one (billing disabled)'# EXECUTE this to fix the project: gcloud projects update 'ricc

== Article 9
* Title: 'My favourite Toolchain'
* Author: 'Riccardo Carlesso'
* URL: 'https://medium.com/@palladiusbonton/my-favourite-toolchain-831b56ba6fc5?source=rss-b5293b96912f------2'
* PublicationDate: 'Wed, 12 Apr 2023 11:31:45 GMT'
* Categories: 

How midjourney imagines my favourite Toolchain, in 4 familiar colors ;)Recently, my alter ego Richard asked a provocative question: are you happy with your toolchain, is it modern enough?Before answering that question, o thought, first I need to assess it and enumerate it. Let’s see 🙈 what toolchain is:Coding IDE: vscode. It is so amazing, I’ve tried something different, the OSS version, but it’s fast, extensible and just wow. The only missing thing is, a fast edit-over-ssh. But it’s not MS fault.Favourite language: Ruby. I know what you’re thinking, but it makes me happy, and efficient. I’ve tried other languages and frameworks, and nothing beats RoR in 2022 (I’ve spent 2 weekend to prove myself wrong, failing). If I need efficiencyApp Development: Ruby on Rails. I’ve given Js a go many times, it’s spectacular on many parts, but developing an app in a DRY way (rather than duplicating code for BE/FE) and having a single solid choice over a fragmentation of libs for me wins.CI: GCP Cloud Build and skaffold. I might be biased as Googler here.CD: Cloud Deploy and GitHub actions. Again, biased 😊CI/CD: Skaffold plus GCP tooling on top of github repos. Use kustomize to DRY the manifests.Serverless: Cloud Run and App Engine. Never been a huge fan of Cloud functions, or maybe I just don’t get them :)IaaS : Google Cloud Platform. If you ask my favourite product, I’d say GCE as it was my first love.PaaS: App Engine + Heroku.SaaS: GitHub, Google Workspace, Atlassian Bitbucket.Infra as Code: Pulumi and Terraform. Back in the days, Chef.kubernetes: I love GKE remotely, and minikube locally. Kustomize to DRY my manifests. Not a big fan of Helm, tried it and hated it. Kpt is in my TODO list.Docker: I love docker-compose, although it doesn’t scale much. For simple single-apps, I use that. For more complex stuff, skaffold.Testing: I invented a bash testing suite — a friend told me I’d become famous — I didn’t 😃. Happy to share code with you if you ask, and you’re back to the asylum tonight.More to follow…Infra as Code is so hot right now!

== Article 10
* Title: 'Ruby on Rails-like ORM and scaffolding in Golang anyone?'
* Author: 'Riccardo Carlesso'
* URL: 'https://medium.com/@palladiusbonton/ruby-on-rails-like-orm-in-golang-anyone-gopher-random-4558047da41?source=rss-b5293b96912f------2'
* PublicationDate: 'Thu, 22 Dec 2022 09:16:13 GMT'
* Categories: 

This is a typical Gopher writing code… on Rails 🚈!I ❤️ Ruby on Rails. With all my 💛. I can rapid-prototype any 3–4 models app in a couple of hours and do a POC in an afternoon, and this is thanks to scaffolding. I can write this and RoR will create a proper Model, Controller, and ~4 Views (MVC) and DB schema with rock-solid change-management :rails generate scaffold Album title:string year:decimal singer:referencerails generate scaffold Track title:string duration:decimal album:referencesrails generate scaffold Article title:string body:string comment:string rating:integer url:string is_public:booleanbundle exec rake db:migrateHowever, my colleagues bully me that🔻Ruby is dead, 🚈 Rails is dead, and long live 📦 Node.Js and so on. So I thought: it’s 🎅 December, let’s learn a new language. I thought of learning C# — just kidding (I’m already a pianist)— I thought that Golang was the way to go. As of December 1st 🎅, everyone on Facebook has a single thing in mind: Whammageddon!After taking a 2h course in Go and doing my first word count, my head got big and I thought: I’m now ready for the next step: a silly Whammageddon app to record my friends whammageddon spectacular stories!Whammageddon rules — if you just woke up from a criogenic coffin yesterday :)🚈 Golang on Rails optionsI tried (meaning, I spent 2 hours each) a few options (Bee, Revel, Buffalo), and I’ll describe them in order. Note that I might be unfair to the first in chronological order as my ability to go get something wasn’t as good as in try number 3 :)Queen Bee might be biased on who wins…1: 🐝 BeegoCode source: https://github.com/beego/beegoBeego was the first Google result for “Ruby on Rails” for go. To be fair to bee, I was on a long flight to Israel and tried to make it work with jumpy airport internet and the experience was horrible (as a true Italian, I thought of filing a PR to enlarge gocapabilities with a new 4-letter verb). Nothing wrong with Bee, though.This is how a migration looks like:Pros 😃:I really enjoyed its ability to simply create ORM model from CLI. Example:$ bee generate scaffold riccardo_post -fields 'title:string,body:text,active:bool,published:datetime'It also allows to have different models connecting to different datasources (wOOt! I wonder how you do a JOIN from Europe to Australia). Example: ```bee generate scaffold user -fields="first_name:string:255,last_name:string:255,email:string:255" -driver=postgres -conn="postgres://user:pass@localhost:5432/db?sslmode=disable"bee generate scaffold riccpost -fields="title:string,body:text" -driver=mysql -conn="root:@tcp(127.0.0.1:3306)/test"CLI allows to create docs and swagger interface on the fly via bee run -downdoc=true -gendoc=true .I ~supports 80% scaffolding for model, controllers, DB/migration but creates an empty view (github issue). In my case, it gets the controller dependencies wrong (probably because its a monorepo) and I need to manually fix it ( long path to beego-whammageddon/models). 😫It politely asks me if I want to create model, controller, resource, migration and migrate the DB itself! Wow!bee dockerize creates a Dockerfile for you. I’ve always wished for the same on RoR!Cons 😢 :Lack of Scaffolding capabilities on the view side. It rocks on model/migration, but it doesn’t create the needed views.Scaffolding on Controller side seems broken to me. I get Method Not Allowed, which is answered here (missing Get()function — why would you do that?!?)2. 🥳 RevelSource: https://revel.github.io/When I read from Amrit: “ If you have used Ruby on Rails, you are going to love Revel. If you are a Python developer who has used Django, you will like Beego.” I felt: what have I done in the past 4 hours?!? I had an agnition, or shall I say… a revelation!!Revel has a very simple and straightforward docs page which will guide you through a multi-page, stateless form-rich hello world within 10 minutes.It has modules (pluggable packages) for NewRelic, Static files, Logging, ..It has nice examples repos; the closest to Ror seems to be the Booking app (docs — code). Code is from 2020.It uses GORP as ORM. However, after first excitement, I realized also Revel lacks a proper way to scaffoldI was too stupid to make it work and I threw the sponge. Hoewver with 2 lines you can actually get this — wow!Commands to achieve this (copied from here):git clone https://github.com/revel/examples.git "${GOPATH}/src/github.com/revel/examples"#DOESNT WORK FOR ME - I might be stuipidrevel run github.com/revel/examples/booking# THIS WORKS FOR MErevel run "${GOPATH}/src/github.com/revel/examples"So if you have time to understand and reverse engineer the booking app, you’re going to enjoy Revel a lot. However, the inability to scaffold from scratch is a real turn off for me.Here I totally failed to do any scaffolding: no model/controller/view for me. I’ll probably spend some time in the weekend reverse-engineering the booking app… 😢3. 🦬Buffalosource: https://gobuffalo.io/Now, the first thing you see with Buffalo is — wOOt? They even bothered adding a CSS! Clearly, there’s some money and a real company behind this (like DHH and Basecamp behind Rails). Graphics is captivating and I love it already!First, it uses pop which supports PostgreS Cockroach MySQL and Sqlite3 out of the box.With Soda and Fizz, you get a Rails-like experience in setting up the DB and migrating it:// migrate UPcreate_table("users") {  t.Column("email", "string", {})  t.Column("twitter_handle", "string", {"size": 50})  t.Column("age", "integer", {"default": 0})  t.Column("admin", "bool", {"default": false})  t.Column("company_id", "uuid", {"default_raw": "uuid_generate_v1()"})  t.Column("bio", "text", {"null": true})  t.Column("joined_at", "timestamp", {})}// migrate downdrop_table("users")This is absolutely fantastic ! Unfortunately it doesn’t seem to have the CLI interface to create a scaffold 😐, while you can reach a great experience by typing the code yourself.To use generators, it looks to me you need to install pop as a separate module: https://github.com/gobuffalo/buffalo-pop. After doing so, you get buffalo pop g --help which returns this same output. (Before, it would return a weird output).Now, I was able with a single command line (non documented anywhere, just by trying out!) to create a new model with my fields and also its migration, but not the controller and the views :/# For '--skip-migration' read belowbuffalo pop g model --skip-migration foobar RiccTitle:string RiccDescription:textbuffalo pop g model --skip-migration barbaz RiccDescription:text UltimateAnswer:int32 Active:boolNote: he first time you call the function without skip miogration, but every subsequent invocation it will create another migration for the same model; so if you just want to auto-magically update the model until you got it right, you call it as above.Like in Rails, DB can be easily configured in a single YAML or via ENV variables.# database.yamldevelopment:  dialect: postgres  database: whamageddon_buffalo_development  user: postgres  password: postgres  host: 127.0.0.1  pool: 5test:  url: {{envOr "TEST_DATABASE_URL" "postgres://postgres:postgres@127.0.0.1:5432/whamageddon_buffalo_test?sslmode=disable"}}production:  url: {{envOr "DATABASE_URL" "postgres://postgres:postgres@127.0.0.1:5432/whamageddon_buffalo_production?sslmode=disable"}}[Golang vs Ruby] on ORM and ScaffoldingSo my first impressions on Go (vs Ruby):➕blazing fast➕compile in a single binary — easy to dockerize/ship.➖ Go has a tendency to want your app to be single repo. What if I want to have 3 folders under the same repo — can I Mr Go?No thanks Mr Go :)➖ Lack of a convincing zero-brain scaffolding technique.ConclusionsLike Bonucci told the Brits at the end of European Championship in London, “ne dovete mangiare di pastasciutta!” (you still have a lot of pasta to eat), I believe Golang has still a long way to go to get to Ruby feasts when it comes to ORM and Rails rapid-prototyping.Bonucci is a recognized national hero in Italy after this. Expect rolling the arm gesture to catch up with emojipedia starting v14.0!This morning, while swimming, I wanted to create a nice table with 3–5 stars for all, but Medium doesn’t support tables. Hence I’ll just get the winner per topic:Documentation: revel &amp; buffaloLook and feel: BuffaloDocumentation for day-0 hello app: revel.Model CLI creation: beego.Migration: Buffalo (thanks to fizz)Scaffolding: none (rails rulez).However, go has a long list of advantages that makes this passage worthwhile:damn easy dockerization (single chubby binary)no dependencies craze in prod (single chubby binary)Note there are also other solution apart from Bee, Revel and Buffalo: Gin&amp;Gonic, Goji, Iris, … and I hear echo also strikes a great balance (think of Sinatra if you’re a rubyist).Note. I’m a ~day1 user of Go. I’m pretty sure some things I’ve said might be incorrect. I’d be honoured to get your feedback in form of comments.
