```json
{
    "prompt_version": "1.15",
    "llm_temperature": "0.9",
    "author_name": "Guillaume Laforge",
    "author_nationality": "French",
    "author_style": "Technical, informative, concise",
    "author_favorite_languages": "Java, Groovy",
    "author_favorite_cloud": "Google Cloud",
    "typos": [
        {
            "current": "supllement",
            "correct": "supplement",
            "url": "https://medium.com/google-cloud/gemini-function-calling-1585c044d28d?source=rss-431147437aeb------2"
        },
        {
            "current": "Gemma",
            "correct": "Gemini",
            "url": "https://medium.com/google-cloud/grounding-gemini-with-web-search-results-in-langchain4j-2f949bd69492?source=rss-431147437aeb------2"
        },
        {
            "current": "textembedding-geckomodel",
            "correct": "textembedding-gecko",
            "url": "https://medium.com/google-cloud/visualize-palm-based-llm-tokens-8760b3122c0f?source=rss-431147437aeb------2"
        }
    ],
    "articles_feedback": [
        {
            "title": "Letâ€™s make Gemini Groovy!",
            "summary": "This article explores using Groovy with Gemini Advanced, Google's AI web assistant. It demonstrates how to create a Groovy interpreter tool and integrate it into LangChain4j to execute Groovy scripts within Gemini. The author provides a step-by-step guide, including code examples, to enable Gemini to solve math and logic problems using Groovy. While the solution is experimental, it highlights the potential of using Groovy with Gemini.",
            "url": "https://medium.com/google-cloud/lets-make-gemini-groovy-7481ac6add04?source=rss-431147437aeb------2",
            "accuracy": 8,
            "publication_date": "2024-06-03",
            "is_gcp": true,
            "is_technical": true,
            "Categories": [
                "gemini",
                "groovy",
                "java",
                "generative-ai",
                "langchain4j"
            ]
        },
        {
            "title": "Grounding Gemini with Web Search results in LangChain4j",
            "summary": "This article delves into integrating web search results into LangChain4j for grounding Gemini's responses. The author demonstrates how to create a custom search engine using Google Custom Search and configure LangChain4j to retrieve relevant information from the web. By integrating web search results, Gemini can access up-to-date information, expanding its knowledge base beyond its training data. The author explores potential applications and limitations of this approach.",
            "url": "https://medium.com/google-cloud/grounding-gemini-with-web-search-results-in-langchain4j-2f949bd69492?source=rss-431147437aeb------2",
            "accuracy": 9,
            "publication_date": "2024-05-28",
            "is_gcp": true,
            "is_technical": true,
            "Categories": [
                "generative-ai",
                "google-cloud-platform",
                "langchain4j",
                "gemini",
                "java"
            ]
        },
        {
            "title": "Calling Gemma with Ollama, TestContainers, and LangChain4j",
            "summary": "This article demonstrates how to run the Gemma language model locally using Ollama and TestContainers in a Java environment. The author provides a step-by-step guide to create a Docker image that runs Ollama with Gemma and integrate it with LangChain4j. The article highlights the benefits of containerization and TestContainers for running LLMs locally, eliminating the need for local installation. This approach allows developers to experiment with Gemma without complex setup.",
            "url": "https://medium.com/google-cloud/calling-gemma-with-ollama-testcontainers-and-langchain4j-fbfe220ca715?source=rss-431147437aeb------2",
            "accuracy": 9,
            "publication_date": "2024-04-03",
            "is_gcp": true,
            "is_technical": true,
            "Categories": [
                "gcp-app-dev",
                "ollama",
                "google-cloud-platform",
                "testcontainer",
                "langchain4j"
            ]
        },
        {
            "title": "Gemini codelab for Java developers using LangChain4j",
            "summary": "This article introduces a codelab that guides Java developers through integrating Gemini into their applications using LangChain4j. The codelab covers various use cases, including basic Gemini interaction, conversation management, multimodality, data extraction, prompt templates, text classification, and retrieval augmented generation. The article encourages developers to attend a hands-on-lab workshop at Devoxx France for a deeper dive into the codelab.",
            "url": "https://medium.com/google-cloud/gemini-codelab-for-java-developers-using-langchain4j-769fbd419756?source=rss-431147437aeb------2",
            "accuracy": 8,
            "publication_date": "2024-03-27",
            "is_gcp": true,
            "is_technical": true,
            "Categories": [
                "langchain4j",
                "gemini",
                "google-cloud-platform",
                "gcp-app-dev",
                "java"
            ]
        },
        {
            "title": "Visualize PaLM-based LLM tokens",
            "summary": "This article explores tokenization in PaLM-based models. The author developed an application that visualizes and inspects LLM tokens. Users can input text, select a PaLM-based model, and view the tokens with their IDs. The application is built using Micronaut and deployed on Google Cloud Run. The article provides links to the online application and source code, enabling users to experiment with tokenization.",
            "url": "https://medium.com/google-cloud/visualize-palm-based-llm-tokens-8760b3122c0f?source=rss-431147437aeb------2",
            "accuracy": 7,
            "publication_date": "2024-02-05",
            "is_gcp": true,
            "is_technical": true,
            "Categories": [
                "llm",
                "google-cloud-platform",
                "gcp-app-dev",
                "vertex-ai",
                "generative-ai-tools"
            ]
        },
        {
            "title": "Image generation with Imagen and LangChain4j",
            "summary": "This article delves into generating and editing images using Google's Imagen model with LangChain4j. The author provides a step-by-step guide to using Imagen v1 and v2 in Java, including code examples for image generation, mask-based and mask-free editing, and upscaling. The article highlights Imagen's capabilities, including style options, negative prompts, and guidance scale settings.",
            "url": "https://medium.com/google-cloud/image-generation-with-imagen-and-langchain4j-61ca08ae6aac?source=rss-431147437aeb------2",
            "accuracy": 9,
            "publication_date": "2024-02-01",
            "is_gcp": true,
            "is_technical": true,
            "Categories": [
                "google-cloud-platform",
                "imagen",
                "java",
                "langchain",
                "generative-ai-use-cases"
            ]
        },
        {
            "title": "Gemini Function Calling",
            "summary": "This article explores function calling in Google DeepMind's Gemini language model. The author provides a practical guide to utilizing Gemini's function calling feature in Java, using the internal protobuf classes. The article explains how to define functions, configure them as tools for Gemini, and handle function call requests and responses. The author discusses the importance of providing function descriptions and parameters for effective interaction with Gemini.",
            "url": "https://medium.com/google-cloud/gemini-function-calling-1585c044d28d?source=rss-431147437aeb------2",
            "accuracy": 9,
            "publication_date": "2023-12-22",
            "is_gcp": true,
            "is_technical": true,
            "Categories": [
                "java",
                "gcp-app-dev",
                "google-cloud-platform",
                "vertex-ai",
                "gemini"
            ]
        },
        {
            "title": "Visualize and Inspect Workflows Executions",
            "summary": "This article highlights the new introspection capabilities added to Google Cloud Workflows. The author explains how users can now visualize and inspect workflow executions in more detail, including viewing the history of executed steps and identifying failed steps within a visual graph. The article encourages users to leverage this feature for better understanding and debugging workflow executions.",
            "url": "https://medium.com/google-cloud/visualize-and-inspect-workflows-executions-00aafe188d3d?source=rss-431147437aeb------2",
            "accuracy": 8,
            "publication_date": "2023-12-22",
            "is_gcp": true,
            "is_technical": true,
            "Categories": [
                "gcp-workflows",
                "workflow",
                "debugging",
                "google-cloud-platform"
            ]
        },
        {
            "title": "Hands on Codelabs to dabble with Large Language Models in Java",
            "summary": "This article introduces two codelabs designed for Java developers to explore large language models using LangChain4J and the PaLM 2 model. The codelabs guide users through setting up their environment, working with the Google Cloud shell and editor, and utilizing PaLM 2 for text generation and chat. The author highlights the key concepts covered in each codelab and encourages developers to learn about PaLM 2's different modes and capabilities.",
            "url": "https://medium.com/google-cloud/hands-on-codelabs-to-dabble-with-large-language-models-in-java-ee7bc330f5fe?source=rss-431147437aeb------2",
            "accuracy": 8,
            "publication_date": "2023-12-18",
            "is_gcp": true,
            "is_technical": true,
            "Categories": [
                "llm",
                "generative-ai",
                "java",
                "google-cloud-platform",
                "langchain"
            ]
        }
    ]
}
```